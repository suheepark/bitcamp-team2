[v0.6]
구현할 기능:
=> 삭제 기능 추가
명령> delete
삭제할 학생의 아이디는? hong
hong 학생 정보를 삭제하였습니다.
명령>
명령> delete
삭제할 학생의 아이디는? hong2
hong이라는 학생이 없습니다.
명령>

=> 변경 기능 추가
명령> update
변경할 학생의 아이디는? hong
암호? 1111
이름? 임꺽정
전화? 111-1212
이메일? leem@test.com
재직중(y/n)? y
태어난해? 1980
최종학교? 1
저장하시겠습니까(y/n)? y
저장하였습니다.
명령>
...
저장하시겠습니까(y/n)? n
변경을 취소하였습니다.
명령>
명령> update
변경할 학생의 아이디는? hong
hong이라는 학생이 없습니다.
명령>

산출물:
=> Student.java
=> EduApp.java (변경)
=> StudentController.java (변경)

학습목표:
=> 삭제와 변경을 추가하여 CRUD(Create/Read/Update/Delete) 기본 기능을 완성한다.
=> 기존의 코드에 새 기능을 추가하는 경험을 해본다.
   이것이 유지보수 개발업무이다.

[v0.5]
구현할 기능:
=> StudentController 클래스를 확장해서 사용할 수 있도록,
   학생 목록을 스태틱 변수로 저장하지 말고, 인스턴스 변수로 저장한다.
=> 그에 따라 명령어를 처리하는 메서드도 인스턴스 메서드로 전환한다.

산출물:
=> Student.java
=> EduApp.java (변경)
=> StudentController.java (변경)

학습목표:
=> 인스턴스 변수와 인스턴스 메서드의 사용법을 익힌다.
=> 생성자의 용도를 다시 한 번 확인한다.

[v0.4]
구현할 기능:
=> 소스 코드 리팩토링(refactoring)
   => 유지보수하기 좋게 소스 코드를 좀 더 객체지향적으로 정리한다.
=> EduApp에 있는 Student에 대해 명령을 다루는 데 관련된 메서드를
   따로 다른 클래스로 분류한다.

산출물:
=> Student.java
=> EduApp.java
=> StudentController.java (추가)

학습목표:
=> 클래스 문법의 용도를 다시 한 번 익힌다.
   => 클래스는 특정 작업과 관련된 메서드를 관리하기 좋게 분류할 때 사용한다.


[v0.3]
구현할 기능:
=> 사용자에게 명령어를 입력 받는 프롬프트 기능을 추가한다.
예) 프로그램을 시작시키면 다음과 같이 동작한다.
명령> add
아이디(:hong)? 1
암호(예:1111)? 1
이름(예:홍길동)? 1
전화(예:010-1111-2222)? 1
이메일(예:hong@test.com)? 1
재직중(y/n)? y
태어난해(예:1980)? 1980
최종학교(예:비트고등학교)? 1
계속 입력하시겠습니까(y/n)? n
명령> list
1,1,1,1,1,yes,1980,1
명령> view
학생 아이디? hong
----------------------------
아이디: 1
암호: 1
이름: 1
전화: 1
이메일: 1
재직중: y
태어난해: 1980
최종학교: 1
명령>

산출물:

학습목표:
=> 반복문 중첩해서 사용하는 방법을 익힌다.
=> 입력 코드를 별도의 메서드로 분리하여 유지보수 하기 좋은 코드를 만드는 것을 익힌다.


[v0.2]
구현할 기능:
=> 여러 명의 학생 정보를 입력 받아 저장하기

산출물:
=> Student.java
=> EduApp.java (코드 변경)

학습목표:
=> 배열을 사용하여 여러 개의 인스턴스를 다루는 방법을 익힌다.
=> 여러 번 입력 받기 위해 반복문을 사용하는 방법을 익힌다.
=> 인스턴스와 레퍼런스의 관계를 이해한다.
=> 배열 레퍼런스 변수와 배열 인스턴스 객체를 이해한다.
=> 여러 명의 학생 정보를 출력하기 위해
   한 학생 정보를 출력하는 코드를 별도의 메서드로 분리한다.
   메서드의 용도와 사용법을 익힌다.

[v0.1]
구현할 기능:
=> 학생 정보를 다룰 때 사용할 Student 데이터 타입을 정의한다.
=> 학생 정보를 입력 받아 출력해본다.

산출물:
=> Student.java
=> EduApp.java

학습목표:
=> Class 문법을 사용하여 사용자 정의 데이터 타입을 만드는 방법을 익힌다.
=> 키보드를 통해 사용자로부터 입력 받는 방법을 배운다.
=> 인스턴스를 생성하고 인스턴스에 값을 넣는 방법을 익힌다.
=> 문자열 데이터를 int, boolean 등 다른 타입의 값으로 바꾸는 방법을 배운다.
